@model SCManager.UserInterface.Models.UserProfileViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Edit your profile

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchUserProfile" style="min-height:25px">

            @{
                var data = new { ActionType = "Save" };
                @Html.Action("ChangeButtonStyle", "UserProfile", data);
            }
        </div>
    </div>
</div>

<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills"></ul>
    <div class="tab-content clearfix">
        @using (Ajax.BeginForm("UpdateUserProfile", "UserProfile", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "userProfileSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "validate", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "userprofileform" }))
            {
            @Html.AntiForgeryToken()



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="inputForm col-md-12">
                &nbsp;
            </div>
                <div class="col-md-12">
                    <div class="col-md-6">

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })

                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @Value = @User.Identity.Name } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label" })

                            </div>
                            <div class="col-md-5">
                                @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control" })
                            
                                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                            
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>

                </div>


                <div class="form-group" hidden="hidden">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnSaveUserprofile" type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>

        }

        <div>
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserProfile")
}




