@model SCManager.UserInterface.Models.SalesReturnViewModel

@{
    ViewBag.Title = "Sales Return";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/DataTables/css/datatable")
    @Styles.Render("~/Content/bootstrapdatepicker")
}
<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Sales Return

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchSalesReturnSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "SalesReturn", data);
            }
        </div>
    </div>
</div>
<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        <li class="active">
            <a id="SalesReturnTab" onclick="List()" href="#SalesReturnList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>SalesReturn List</a>
        </li>
        <li>
            <a id="AddTab" onclick="Add(1)" href="#SalesReturnEntry" data-toggle="tab" style="width:235px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>SalesReturn Entry</a>
        </li>

    </ul>
    <div class="tab-content clearfix">
        <div class="tab-pane fade in active" id="SalesReturnList">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <table id="tblSalesReturnList" class="table table-striped table-bordered table-hover" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th style="display:none;">ID</th>
                            <th>Date</th>
                            <th>Reference No.</th>
                            <th>Code</th>
                            <th>Description</th>
                            <th>Quantity</th>
                            <th>Returned To Company</th>
                            <th>Remark</th>
                            <th>...</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="SalesReturnEntry">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                @using (Ajax.BeginForm("InsertUpdateSalesReturn", "SalesReturn", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SalesReturnSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formIns_Up" }))
                {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="inputForm col-md-12">
                        &nbsp;
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.OpenDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                                <div class="col-md-5">
                                @Html.EditorFor(model => model.OpenDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "OpenDate" } })
                                @Html.ValidationMessageFor(model => model.OpenDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label " })
                               </div>
                                 <div class="col-md-5">
                                    @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ItemCode, htmlAttributes: new { @class = "control-label " })
                               </div>
                                 <div class="col-md-5">
                                    @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control" , list = "Materials", @onchange = "ItemCodeOnChange(this)" } })
                                     <datalist id="Materials" onfocus='this.size=10;' onblur='this.size=1;'
                                               onchange='this.size=1; this.blur();'></datalist>
                                    @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
                                </div>
                            <div class="col-md-1 mandatory"></div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label" })
                              </div>
                                  <div class="col-md-5">
                                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                                </div>
                            <div class="col-md-1 mandatory"></div>
                            </div>
                        </div>
                    <div class="col-md-6">

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control HeaderBox",  @readonly = "readonly", rows = 3 } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label " })
                               </div>
                                 <div class="col-md-5">
                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control HeaderBox" , rows = 4 } })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>

                      
                        </div>
                        <div class="form-group" hidden="hidden">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnInsertUpdateSalesReturn" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ID", @Value = Guid.Empty })
                    @Html.HiddenFor(model => model.ItemID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ItemID", @Value = Guid.Empty })
                    @Html.HiddenFor(model => model.HiddenQty, htmlAttributes: new { @class = "control-label col-lg-2", id = "HiddenQty", @Value = string.Empty })
                }
            </div>
            </div>

        <div id="SalesReturnDelete" hidden="hidden">
            @using (Ajax.BeginForm("DeleteSalesReturn", "SalesReturn", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "deleteId" })
                    <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
                </div>
            }
        </div>

        <div id="SalesReturnToCompany" hidden="hidden">
            @using (Ajax.BeginForm("ReturnSalesToCompany", "SalesReturn", new AjaxOptions { HttpMethod = "POST", OnSuccess = "ReturnSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "returnId" })
                    <input id="btnFormReturn" type="submit" value="Return" class="btn btn-default" />
                </div>
            }
        </div>
        </div>
        <div>
        </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.Render("~/bundles/bootstrapdatepicker")
    @Scripts.Render("~/bundles/SalesReturn")
}
