@model SCManager.UserInterface.Models.OfficeBillEntryViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "Office Bill Entry";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion,"~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
}

<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Office Bill Entry

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchOfficeBillEntrySettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "OfficeBillEntry", data);
            }
        </div>
    </div>
</div>

<div id="exTab3" class="container SCtabContainer">

    <ul class="nav nav-pills">
        <li class="active" onclick="List()">
            <a id="ListTab" href="#1b" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Customer Bills</a>
        </li>
        <li onclick="Add()">
            <a id="AddTab" href="#2b" data-toggle="tab" style="width:170px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Bill Entry</a>
        </li>

    </ul>

    <div class="tab-content clearfix">

        <div class="tab-pane fade in active" id="1b">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <table id="tblCustomerBills" class="table table-striped table-bordered table-hover" cellspacing="0">
                    <thead>
                        <tr class="text-center">

                            <th style="display:none;">ID</th>                        
                           
                            <th>Date</th>
                            <th>Bill No</th>
                            <th>Customer</th>
                            <th>Customer Contact No.</th>
                            <th>Customer Location</th>                           
                           
                            <th>Remarks</th>
                            <th>...</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="2b">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
               @using (Ajax.BeginForm("InsertUpdateOfficeBillEntry", "OfficeBillEntry", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "Office" }))
               {
                    @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "0", @id = "HeaderID", })              
                @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @id = "DetailJSON", Value = "" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="inputForm col-md-12">
                    &nbsp;
                </div>
                <div class="inputForm col-md-5">

                  
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.BillNo, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.BillNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BillNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1 mandatory"></div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.BillDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.BillDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
                            </div>
                        <div class="col-md-1 mandatory"></div>
                        </div>
                  
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                            </div>
                        <div class="col-md-1 mandatory"></div>
                        </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.CustomerContactNo, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.CustomerContactNo, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)" } })
                                @Html.ValidationMessageFor(model => model.CustomerContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="inputForm col-md-5">                  

                    

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.CustomerLocation, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.CustomerLocation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CustomerLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @{
                                        List<SelectListItem> listOtherIncomePaymentMode = new List<SelectListItem>();
                                        listOtherIncomePaymentMode.Add(new SelectListItem
                                        {
                                            Text = "Cash",
                                            Value = "Cash"
                                        });
                                        listOtherIncomePaymentMode.Add(new SelectListItem
                                        {
                                            Text = "Cheque",
                                            Value = "Cheque"
                                        });
                                        listOtherIncomePaymentMode.Add(new SelectListItem
                                        {
                                            Text = "Online",
                                            Value = "Online"
                                        });
                                    }
                                    @Html.DropDownListFor(model => model.PaymentMode, listOtherIncomePaymentMode, "-- Select Payment Mode --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;" })
                                  
                                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                      
                        
                    </div>
                    <div class="inputForm col-md-2">&nbsp;</div>
                    <div class="inputForm col-md-12 Subhead">&nbsp;</div>
                    <div class="col-md-1" style="text-align:right;cursor:pointer;vertical-align:bottom">                       
                    </div>
                    <div class="inputForm col-md-12">
                        <table id="tblOfficeDetails" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                            <thead>
                                <tr class="text-center">

                                    <th style="display:none">ID</th>
                                    <th>Sl No</th>
                                    <th>Material</th>
                                    <th>Description</th>
                                    <th>Quantity</th>
                                    <th>UOM</th>
                                    <th>Rate (₹)</th>
                                    <th>Total Amount (₹)</th>
                                    <th>...</th>
                                </tr>
                            </thead>
                        </table>

                    </div>
                    <div class="inputForm col-md-8">

                    </div>
                    <div class="inputForm col-md-4">

                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control Amount", @id = "subtotal", @readonly = "readonly", style = "text-align:right" } })
                                    @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.VATAmount, htmlAttributes: new { @class = "control-label " })
                                </div>
                            <div class="col-md-3">
                                <input type="text" id="vatpercentage" class="form-control vattxt" onkeyup="CalculateVAT()" />
                            </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.VATAmount, new { htmlAttributes = new { @class = "form-control Amount", @id = "VATAmount", @onblur = "AmountSummary()", style = "text-align:right", @onclick = "SelectAllValue(this);" } })
                                    @Html.ValidationMessageFor(model => model.VATAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" , style = "text-align:right", @id = "discount", @onblur = "AmountSummary();", @onclick = "SelectAllValue(this);" } })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.GrandTotal, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.GrandTotal, new { htmlAttributes = new { @class = "form-control Amount GrandTotal", @readonly = "readonly", @id = "grandtotal", style = "text-align:right" } })
                                    @Html.ValidationMessageFor(model => model.GrandTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                      
                        </div>
                        <div class="form-horizontal">
                            <div class="form-group" hidden="hidden">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                        }

                    </div>
                <div class="inputForm col-md-2">&nbsp;</div>
                <div class="inputForm col-md-2">&nbsp;</div>
            </div>
            <div class="preloader" id="prelaoder">
                <img src="~/Content/images/loading.gif" class="preloaderImg" />
            </div>
        </div>   
    </div>
<datalist id="Materials" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>
  
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/bootstrapdatepicker")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/OfficeBillEntry")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/editableGrid")
}