@model SCManager.UserInterface.Models.DefectiveorDamagedViewModel

@{
    ViewBag.Title = "Defective/Damaged";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/DataTables/css/datatable")
    @Styles.Render("~/Content/bootstrapdatepicker")
}
<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Defective/Damaged

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchDefectiveorDamagedSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "DefectiveorDamaged", data);
            }
        </div>
    </div>
</div>
<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        <li class="active">
            <a id="DefectiveorDamagedTab" onclick="List()" href="#DefectiveorDamagedList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Defective/Damaged List</a>
        </li>
        <li>
            <a id="AddTab" onclick="Add(1)" href="#DefectiveorDamagedEntry" data-toggle="tab" style="width:235px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Defective/Damaged Entry</a>
        </li>

    </ul>
    <div class="tab-content clearfix">
        <div class="tab-pane fade in active" id="DefectiveorDamagedList">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <table id="tblDefectiveorDamagedList" class="table table-striped table-bordered table-hover" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th style="display:none;">ID</th>
                            <th>Type</th>
                            <th>Date</th>
                            <th>Reference No.</th>
                            <th>Code</th>
                            <th>Description</th>
                            <th>Quantity</th>
                            <th>Returned To Company</th>
                            <th>Remark</th>
                            <th>...</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="DefectiveorDamagedEntry">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                @using (Ajax.BeginForm("InsertUpdateDefectDamaged", "DefectiveorDamaged", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "DefectiveDamagedSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formIns_Up" }))
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inputForm col-md-12">
                            &nbsp;
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @{
                                        List<SelectListItem> listDefectiveDamagedType = new List<SelectListItem>();
                                        listDefectiveDamagedType.Add(new SelectListItem
                                        { Text = "Defective", Value = "Defective" });
                                        listDefectiveDamagedType.Add(new SelectListItem
                                        { Text = "Damaged", Value = "Damaged" });
                                    }
                                    @Html.DropDownListFor(model => model.Type, listDefectiveDamagedType, "-- Select Type --", new { @class = "form-control", value = -1, style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Technician, htmlAttributes: new { @class = "control-label " })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.EmpID, Model.TechniciansList, "-- Select Technician --" , new { @class = "form-control", value = -1, style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.OpenDate, htmlAttributes: new { @class = "control-label " })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.EditorFor(model => model.OpenDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "OpenDate" } })
                                        @Html.ValidationMessageFor(model => model.OpenDate, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ItemCode, htmlAttributes: new { @class = "control-label " })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.ItemID, Model.ItemCodeList, "-- Select ItemCode --"  ,new { @class = "form-control", value = -1, style = "padding:4px 12px;", @onchange = "ItemCodeOnChange(this)" })
                                        @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" , style = "height:50px;" , @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label " })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" , style = "height:50px;" } })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                        </div>
                        <div class="form-group" hidden="hidden">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnInsertUpdateDefectiveDamaged" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ID", @Value = Guid.Empty })
                                        }
                </div>
            </div>
        </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/datatable")
        @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
        @Scripts.Render("~/bundles/bootstrapdatepicker")
        @Scripts.Render("~/bundles/DefectDamage")
       
    }
