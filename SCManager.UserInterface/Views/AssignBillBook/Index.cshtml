@model SCManager.UserInterface.Models.AssignBillBookViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "Assign Bill Book";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
}

<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Register & Assign Bill Books

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchAssignBillBookSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "AssignBillBook", data);
            }
        </div>
    </div>
</div>

<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        <li class="active">
            <a id="ListTab" onclick="List()" href="#BillList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Bill Book List</a>
        </li>
        <li>
            <a id="AddTab" onclick="Add(1)" href="#BillEntry" data-toggle="tab" style="width:170px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Bill Book Entry</a>
        </li>

    </ul>

    <div class="tab-content clearfix">

        <div class="tab-pane fade in active" id="BillList">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <table id="tblBillList" class="table table-striped table-bordered table-hover" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th style="display:none;">ID</th>
                            <th>Bill Book</th>
                            <th>Series Start</th>
                            <th>Series End</th>
                            <th>Last Used</th>
                            <th>Technician</th>
                            <th>Status</th>
                            <th>Bill Book Type</th>
                            <th>Remarks</th>
                            <th>...</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="BillEntry">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
           @using (Ajax.BeginForm("InsertUpdateBillBook", "AssignBillBook", new AjaxOptions { HttpMethod = "POST",  OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "AssignBillBook" }))
           {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inputForm col-md-12">
                            &nbsp;
                        </div>
                        <div class="col-md-6">
                           
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.BillNo, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.BillNo, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                    @Html.ValidationMessageFor(model => model.BillNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.BillBookType, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    <div class="checkbox">
                                        @{
                                            List<SelectListItem> listBillBookType = new List<SelectListItem>();
                                            listBillBookType.Add(new SelectListItem
                                            { Text = "ICR", Value = "ICR" });
                                            listBillBookType.Add(new SelectListItem
                                            { Text = "TCR", Value = "TCR" });
                                        }
                                        @Html.DropDownListFor(model => model.BillBookType, listBillBookType, "-- Select Book Type --", new { @class = "form-control HeaderBox BlockEnter", value = -1, style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.BillBookType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.SeriesStart, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.SeriesStart, new { htmlAttributes = new { @class = "form-control HeaderBox", @onblur="SerialStartandEndValidation();",@onchange="SeriesChange();" } })
                                        @Html.ValidationMessageFor(model => model.SeriesStart, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.SeriesEnd, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.SeriesEnd, new { htmlAttributes = new { @class = "form-control HeaderBox", @onblur = "SerialStartandEndValidation();", @onchange = "SeriesChange();" } })
                                        @Html.ValidationMessageFor(model => model.SeriesEnd, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.LastUsed, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.LastUsed, new { htmlAttributes = new { @class = "form-control HeaderBox", @readonly = "ReadOnly" } })
                                        @Html.ValidationMessageFor(model => model.LastUsed, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.EmpID, Model.TechniciansList, "-- Select Technician --", new { @class = "form-control HeaderBox BlockEnter", value = -1, style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        <div class="checkbox">
                                            @{
                                                List<SelectListItem> listStatus = new List<SelectListItem>();
                                                listStatus.Add(new SelectListItem
                                                { Text = "Open", Value = "True" });
                                                listStatus.Add(new SelectListItem
                                                { Text = "Closed", Value = "False" });
                                            }
                                            @Html.DropDownListFor(model => model.Status, listStatus, "-- Select Status --", new { @class = "form-control HeaderBox BlockEnter", value = -1, style = "padding:4px 12px;"})
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                </div>

                        

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control HeaderBox",  @id = "Remarks" } })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="form-group" hidden="hidden">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mastersep">
                            <div class="masterinfoHead" style="background-color:rgba(210, 210, 210, 0.24);" >
                                Missing Bill Entries
                            </div>
                            <br />
                            <div class="masterinfoDet" style="text-align:center;max-height:220px;overflow-y:auto;">
                               
                                </div>
                            </div>
                       
                    </div>
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ID", @Value = Guid.Empty })


            }
                </div>
            </div>
        </div>
    </div>
<div class="preloader" id="prelaoder">
    <img src="~/Content/images/loading.gif" class="preloaderImg" />
</div>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/bootstrapdatepicker")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/AssignBillBook")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
}
