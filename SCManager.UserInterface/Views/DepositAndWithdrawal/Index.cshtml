@model SCManager.UserInterface.Models.DepositAndWithdrawalViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "Deposit&Withdrawal";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion,"~/Content/DataTables/css/datatable")
   @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
}
<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Deposits And Withdrawals

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchDepositandwithdrawal" style="min-height:25px">

            @{
                var data = new { ActionType = "Add" };
                @Html.Action("ChangeButtonStyle", "DepositAndWithdrawal", data);
            }
        </div>
    </div>
</div>


<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        <li class="active">
            <a id="tabDepositwithdrawalList" onclick="List()" href="#DepositwithdrawalList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Deposit/Withdrwal List</a>
        </li>
        <li>
            <a id="tabDepositwithdrawalEntry" onclick="Add(1)" href="#DepositwithdrawalEntry" data-toggle="tab" style="width:235px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Deposit/Withdrwal Entry</a>
        </li>


    </ul>
    <div class="tab-content clearfix">
        <div class="tab-pane fade in active" id="DepositwithdrawalList">
           
               
                <div class="col-md-12">&nbsp;</div>

                <div class="col-md-12">&nbsp;</div>
                <div class="col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-1" style="padding-left: 0px;">

                                <div class="css-checkbox">
                                   
                                        <input id="chkShowAll" type="checkbox" onclick="ShowAll(this)">
                                  
                                </div>
                                @*@Html.CheckBoxFor(model => model.showAllYN, new { @class = "css-checkbox", @id = "showAllYNCheckbox", @onclick = "showAllYNCheckedOrNot(this)" })*@
                            </div>
                            <div class="col-md-5" style="margin-left: -25px;">
                                <label class="control-label">Show All</label>
                                @*@Html.LabelFor(model => model.showAllYN, htmlAttributes: new { @class = "control-label" })*@
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="margin-left: -300px;">

                        <div class="form-group">
                            <!----------------6-------------------->

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.RefDate, htmlAttributes: new { @class = "control-label" })
                                @*@Html.LabelFor(model => model.fromDate, htmlAttributes: new { @class = "control-label" })*@
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control HeaderBox datepicker" id="txtReferenceDateFrom" value=@ViewBag.fromdate onChange="ReferenceDateOnChange(this)">
                                <input type="hidden" id="hdfFromDate" value=@ViewBag.fromdate />
                                @*@Html.EditorFor(model => model.fromDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "fromDate" } })
                                @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-1 mandatory"></div>

                        </div>
                    </div>
                    <div class="col-md-4" style="margin-left: -50px;">

                        <div class="form-group">
                            <!----------------6-------------------->

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.RefDate, htmlAttributes: new { @class = "control-label" })
                                @*@Html.LabelFor(model => model.toDate, htmlAttributes: new { @class = "control-label" })*@
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control HeaderBox datepicker" id="txtReferenceDateTo" value=@ViewBag.todate onChange="ReferenceDateOnChange(this)">
                                <input type="hidden" id="hdfToDate" value=@ViewBag.todate />
                                @*@Html.EditorFor(model => model.toDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "toDate" } })
                                @Html.ValidationMessageFor(model => model.toDate, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-1 mandatory"></div>
                        </div>
                    </div>
                    <div class="col-md-12">&nbsp;</div>
                    <div class="col-md-12">
                        <table id="tblDepositwithdrawalList" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                            <thead>
                                <tr class="text-center">
                                    <th style="display:none;">ID</th>
                                    <th>Transaction Type</th>
                                    <th>Date</th>
                                    <th>Reference No.</th>
                                    <th>Amount (₹)</th>
                                    <th>Description</th>
                                    <th>...</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
        </div>
        <div class="tab-pane fade " id="DepositwithdrawalEntry">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                @using (Ajax.BeginForm("InsertUpdateDepositAndWithdrawal", "DepositAndWithdrawal", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DepositAndWithdrawalSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "ValidateForm", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formdepositwithdrwal" }))
                 {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inputForm col-md-12">
                            &nbsp;
                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.TransactionType, htmlAttributes: new { @class = "control-label" })
                                 </div>
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.TransactionType, Model.TransactionTypeList, "-- Select Transaction Type --", new { @class = "form-control BlockEnter", @onchange = "TransactionTypeOnChange(this)", value = -1, style = "padding:4px 12px;" })
                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { Value = "", @id = "DepwithID" })
                                        @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>
                            <div class="form-group hdDepositMode" style="display:none;">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.DepositMode, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.DepositMode, Model.DepositModeList, "-- Select Deposit Mode --", new { @class = "form-control BlockEnter", @onchange = "DepositModeOnChange(this)", value = -1, style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.DepositMode, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>
                            <div class="form-group hdChequeStatus" style="display:none;">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ChequeStatus, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.ChequeStatus, Model.ChequeStatusList, "-- Select Cheque Status --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.ChequeStatus, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label" })
                                 </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control" } })
                                     
                                    </div>
                               
                                </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.RefDate, htmlAttributes: new { @class = "control-label" })
                                 </div>
                                <div class="col-md-5">
                                        @Html.EditorFor(model => model.RefDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                        @Html.ValidationMessageFor(model => model.RefDate, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", style = "text-align:right" } })
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">

                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 3})
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                        </div>
                        <div class="col-md-6 mastersep">
                            <div class="col-md-12">
                                <div class="masterinfo">
                                    <br />
                                    <br />

                                    <div class="masterinfoImg">
                                        <img src="~/Content/images/indian-rupee.png" />

                                    </div>
                                    <br />
                                    <div class="masterinfoHead">
                                        Deposits/Withdrawals
                                    </div>
                                    <br />
                                    <div class="masterinfoDet">
                                        Deposit and withdrawal screen allows to record the Cash/Cheque depositting to the bank account and cash withdrawal from bank account . Which will be used for getting the clear picture of balance status in cash as well as in bank. For cheque deposit ,check status will help to track the 'yet to clear' cheques and can be used for further followups.
                                     </div>
                                </div>
                            </div>


                        </div>

                        <div class="form-group" hidden="hidden">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnInsertUpdateDepositandwithdrawal" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                       
                                        @Html.HiddenFor(model => model.RefNo, htmlAttributes: new { @class = "control-label col-lg-2", id = "HiddenRefNo", @Value = string.Empty })
            }
            </div>
        </div>
     
        <div id="OtherIncomeDelete" hidden="hidden">
            @using (Ajax.BeginForm("DeleteDepositAndWithdrawal", "DepositAndWithdrawal", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", id = "deleteId" })
                    @Html.HiddenFor(model => model.TransactionType, htmlAttributes: new { @class = "control-label col-md-4", id = "deleteTransactionType" })
                    <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/bootstrapdatepicker")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/Depositwithdrawal")
}




