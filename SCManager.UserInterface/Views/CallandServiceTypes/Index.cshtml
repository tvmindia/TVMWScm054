@model SCManager.UserInterface.Models.CallandServiceTypesViewModel

@{
    ViewBag.Title = "CallandServiceTypes";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.Render("~/Content/DataTables/css/datatable")
    @Styles.Render("~/Content/bootstrapdatepicker")
}



<div class="col-md-12">
    <div class="SCHeader col-md-6">
       Service/Call Type Commission

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchCallandServiceTypesSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "Update" };
                @Html.Action("ChangeButtonStyle", "CallandServiceTypes", data);
            }
        </div>
    </div>
</div>
<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        </ul>
        <div class="tab-content clearfix">
            @using (Ajax.BeginForm("UpdateServiceTypes", "CallandServiceTypes", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "CallandServiceTypesSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formIns_Up" }))
            {
                @Html.AntiForgeryToken()



                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="inputForm col-md-12">
                    &nbsp;
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <h4>Service Type Commission</h4>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.MajorCommission, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.MajorCommission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.MajorCommission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.MinorCommission, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.MinorCommission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.MinorCommission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.MandatoryCommission, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.MandatoryCommission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.MandatoryCommission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.RepeatCommission, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.RepeatCommission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.RepeatCommission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.DemoCommission, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.DemoCommission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.DemoCommission, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h4>AMC Commission</h4>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.AMC1Commission, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AMC1Commission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.AMC1Commission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.AMC2Commission, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AMC2Commission, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                @Html.ValidationMessageFor(model => model.AMC2Commission, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

              
                <div class="form-group" hidden="hidden">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnUpdateCallandServiceType" type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>

            }

            <div>
            </div>
        </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.Render("~/bundles/bootstrapdatepicker")
    @Scripts.Render("~/bundles/CallandServiceTypes")
    @Scripts.Render("~/bundles/editableGrid")


}