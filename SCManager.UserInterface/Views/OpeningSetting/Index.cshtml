@model SCManager.UserInterface.Models.OpeningSettingViewModel

@{
    ViewBag.Title = "Opening Setting";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/DataTables/css/datatable")
    @Styles.Render("~/Content/bootstrapdatepicker")
    
}
 

<div class="col-md-12">
    <div class="SCHeader col-md-6">
        Opening Settings

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "OpeningSetting", data);
            }
        </div>
    </div>
</div>







<div id="exTab3" class="container SCtabContainer">


    <ul class="nav nav-pills">
        <li class="active" onclick="List()">
            <a id="ListTab" href="#1b" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>View</a>
        </li>
        <li onclick="Add()">
            <a id="AddTab" href="#2b" data-toggle="tab" style="width:170px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Edit</a>
        </li>

    </ul>

    <div class="tab-content clearfix">
        <div class="tab-pane fade in active" id="1b">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <div class="inputForm col-md-11 Subhead">Balance Amount Settings</div>
                <div class="col-md-12">&nbsp;</div>
               
                    <div class="col-md-5">
                        <div class="form-group col-md-12">
                            <!---------------- 1 --------------------->

                            <div class="col-md-5 ">
                                @Html.LabelFor(model => model.Bank, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6 ">
                                <label id="BankLbl"> @Html.DisplayFor(model => model.BankFormatted) </label>
                            </div>

                        </div>

                        <div class="form-group col-md-12">
                            <!---------------- 2 -------------------->

                            <div class="col-md-5 ">
                                @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6 ">
                                <label id="CashLbl"> @Html.DisplayFor(model => model.CashFormatted) </label>
                            </div>

                        </div>



                        <div class="form-group col-md-12">
                            <!---------------- 2 -------------------->

                            <div class="col-md-5 ">
                                @Html.LabelFor(model => model.WithEffectDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6 ">
                                <label id="WithEffectDateLbl"> @Html.DisplayFor(model => model.WithEffectDateFormatted) </label>
                            </div>

                        </div>


                    </div>
                    <div class="inputForm col-md-5">
                        &nbsp;
                    </div>
                 
                <div class="col-md-12">&nbsp;</div>
                <div class="col-md-12">&nbsp;</div>
                <div class="inputForm col-md-11 Subhead"> Item Stock Settings</div>
                <div class="col-md-12">&nbsp;</div>
                <div class="inputForm col-md-12">
                    <table id="tblOpen" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr class="text-center">
                                
                                <th>Sl No</th>
                                <th>Material</th>
                                <th>Quantity</th>
                                <th>UOM</th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
               
              
            </div>
        <div class="tab-pane fade" id="2b">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">

                @using (Ajax.BeginForm("InsertUpdateOpeningSetting", "OpeningSetting", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "F8" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "0", @id = "HeaderID", })
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @id = "DetailJSON", Value = "" })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    <div class="inputForm col-md-11 Subhead">Balance Amount Settings</div>
                    <div class="col-md-12">&nbsp;</div>
                    <div class="inputForm col-md-5">
                        <div class="form-group col-md-12">
                            <!---------------- 1 --------------------->

                            <div class="col-md-5 ">
                                @Html.LabelFor(model => model.Bank, htmlAttributes: new { @class = "control-label" })
                                (₹)
                            </div>
                            <div class="col-md-6 ">
                                @Html.EditorFor(model => model.Bank, new { htmlAttributes = new { @class = "form-control Amount", @id = "Bank" } })
                                @Html.ValidationMessageFor(model => model.Bank, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>
                        </div>

                        <div class="form-group col-md-12">
                            <!---------------- 2 -------------------->

                            <div class="col-md-5 ">
                                @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label" })
                                (₹)
                            </div>
                            <div class="col-md-6 ">
                                @Html.EditorFor(model => model.Cash, new { htmlAttributes = new { @class = "form-control Amount", @id = "Cash" } })

                                @Html.ValidationMessageFor(model => model.Cash, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>

                        </div>



                        <div class="form-group col-md-12">
                            <!----------------3-------------------->

                            <div class="col-md-5">
                                @Html.LabelFor(model => model.WithEffectDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.WithEffectDate, new { htmlAttributes = new { @class = "form-control HeaderBox",   @id = "WithEffectDate" } })

                            </div>
                            <div class="col-md-1 mandatory"></div>
                        </div>


                    </div>
                    <div class="inputForm col-md-5">
                        
                    </div>
                        <div class="inputForm col-md-2">&nbsp;</div>
                        <div class="inputForm col-md-12 Subhead">&nbsp;</div>
                        <div class="col-md-12">&nbsp;</div>
                        <div class="inputForm col-md-11 Subhead"> Item Stock Settings</div>
                        <div class="col-md-12">&nbsp;</div>
                        <div class="col-md-1" style="text-align:right;cursor:pointer;vertical-align:bottom">
                            @*<span><a onclick="AddMoreRows()">More Rows</a></span>*@
                        </div>
                        <div class="inputForm col-md-12">
                            <table id="tblInvDetails" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center">
                                        <th style="display:none">SCCode</th>
                                        <th style="display:none">ID</th>
                                        <th style="display:none">MaterialID</th>
                                        <th>Sl No</th>
                                        <th>Material</th>
                                        <th>Quantity</th>
                                        <th>UOM</th>
                                        <th>...</th>
                                    </tr>
                                </thead>
                            </table>

                        </div>

                         
                             


                                <input type="submit" id="savebutton" style="display:none" />

                }

            </div>
            <div class="inputForm col-md-2">&nbsp;</div>
            <div class="inputForm col-md-2">&nbsp;</div>
        </div>
        <div class="preloader" id="prelaoder">
            <img src="~/Content/images/loading.gif" class="preloaderImg" />
        </div>
    </div>
</div>
<datalist id="Materials" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>
@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.Render("~/bundles/bootstrapdatepicker")
    @Scripts.Render("~/bundles/OpeningSetting")
    @Scripts.Render("~/bundles/editableGrid")


}