@model SCManager.UserInterface.Models.ICRExpensesViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "ICR Payments to IFB";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion,"~/Content/DataTables/css/datatable")
   @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
}

<style>
    .Outstanding{
        font-size: 15px;
    font-style: normal;
    font-weight: 100;
    }
</style>

<div class="col-md-12">
    <div class="SCHeader col-md-6">
        ICR Payments to IFB

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchICRExpensesSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "ICRExpenses", data);
            }
        </div>
    </div>
</div>

<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">

        <li class="active">
            <a id="AddTab" onclick="Add(1)" href="#ExpenseItem" data-toggle="tab" style="width:200px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Expense Item</a>
        </li>
        <li>
            <a id="ListTab" onclick="List()" href="#ExpenseItemsList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Expenses List</a>
        </li>
    </ul>
    <div class="tab-content clearfix">
        <div class="tab-pane fade in active" id="ExpenseItem">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                @using (Ajax.BeginForm("InsertUpdateICRExpenses", "ICRExpenses", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formIns_Up" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inputForm col-md-12">
                            &nbsp;
                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.EntryNo, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.EntryNo, new { htmlAttributes = new { @class = "form-control BlockEnter", @Value = "<<Auto Generated>>" } })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.RefDate, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.RefDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "Date" } })
                                    @Html.ValidationMessageFor(model => model.RefDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div> 

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.PaymentMode, Model.PaymentModeList, "-- Select Payment Mode --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @onchange = "ChequeTypeDisplay();" })
                                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>

                            <div class="form-group" id="ChequeTypeDiv" hidden="hidden">
                                <div class="col-md-4 ">
                                    @Html.LabelFor(model => model.ChequeType, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @{
                                        List<SelectListItem> listChequeType = new List<SelectListItem>();
                                        listChequeType.Add(new SelectListItem
                                        {
                                            Text = "To IFB",
                                            Value = "IFB"
                                        });
                                        listChequeType.Add(new SelectListItem
                                        {
                                            Text = "To Service Center",
                                            Value = "SC"
                                        });

                                    }
                                    @Html.DropDownListFor(model => model.ChequeType, listChequeType, new { @class = "form-control BlockEnter", value = "IFB", style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.ChequeType, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                    @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
                                </div>
                            </div> 

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control BlockEnter", style = "text-align:right" } })
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = 4 } })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6 mastersep">
                            <div class="col-md-12" id="OutStandingICRPaymentArea" >
                                <div class="masterinfo">
                                    <br />
                                    <br />
                                    <br />
                                    <div class="masterinfoHead">
                                        Outstanding ICR Payment<br/>
                                        <span> <b> @Html.LabelFor(model => model.OutStandingICRPayment, htmlAttributes: new { id = "OutStandingICRPayment" })</b> </span>
                                        <br />
                                        <div class="col-lg-12">
                                            <div class="col-md-2"></div>
                                            <div class="col-md-4" style="text-align:left;"><label class="Outstanding">Outstanding Cheque</label></div>
                                            <div class="col-md-3" style="text-align:right;"><span class="Outstanding">  @Html.LabelFor(model => model.OutstandingCheque, htmlAttributes: new { id = "OutstandingCheque", @class = "Outstanding" }) </span></div>
                                            <div class="col-md-3"></div>
                                         </div>
                                      
                                       <div class="col-md-12">
                                           <div class="col-md-2"></div>
                                           <div class="col-md-4" style="text-align:left;"><label class="Outstanding">Outstanding Cash</label></div>
                                           <div class="col-md-3" style="text-align:right;"><span>  @Html.LabelFor(model => model.OutstandingCash, htmlAttributes: new { id = "OutstandingCash", @class = "Outstanding" }) </span></div>
                                           <div class="col-md-3"></div>
                                        </div>
                                      
                                         
                                       
                                    </div>
                                    <br />
                                    <div class="masterinfoDet">
                                        Outstanding ICR payment refers to the outstanding unpaid balance to IFB which is collected against AMC from Customers.
                                        It's calculated as the difference between total ICR Bill value received  (Payable to IFB) and
                                        the total ICR payment made till date to IFB.
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">


                            <div class="form-group" hidden="hidden">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnInsertUpdateICRExpenses" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "UpdateID" }) 
                }
            </div>
        </div>
        <div class="tab-pane fade" id="ExpenseItemsList">
            <div class="col-md-12">&nbsp;</div>

            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-1">
                            @Html.CheckBoxFor(model => model.showAllYN, new { @class = "css-checkbox", @id = "showAllYNCheckbox", @onclick = "showAllYNCheckedOrNot(this)" })
                            @Html.ValidationMessageFor(model => model.showAllYN, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.showAllYN, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4" style="margin-left: -155px;">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.fromDate, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.fromDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "fromDate", @Value = ViewBag.fromdate } })
                            @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4" style="margin-left: -130px;">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.toDate, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.toDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "toDate", @Value = ViewBag.toDate } })
                            @Html.ValidationMessageFor(model => model.toDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12">&nbsp;</div>
                <div class="col-md-12">
                    <table id="tblICRExpensesList" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr class="text-center">
                                <th style="display:none;">ID</th>
                                <th>Entry No.</th>
                                <th>Date</th>
                                <th>Reference No.</th> 
                                <th>Payment Mode</th> 
                                <th>Description</th>
                                <th>Amount (₹)</th>
                                <th>...</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="ExpensesDelete" hidden="hidden">
                @using (Ajax.BeginForm("DeleteICRExpenses", "ICRExpenses", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
                    @Html.AntiForgeryToken()
                    <div class="form-actions no-color">
                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "deleteId" })
                        <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
                    </div>
                }
            </div>

        </div>
    </div>

    <div class="preloader" id="prelaoder">
        <img src="~/Content/images/loading.gif" class="preloaderImg" />
    </div>

</div>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/bootstrapdatepicker")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/ICRExpenses")
}




