@model SCManager.UserInterface.Models.CreditNotesViewModel
@using SCManager.UserInterface.App_Start
@{
    ViewBag.Title = "CreditNotes";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion,"~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion,"~/Content/bootstrapdatepicker")
}

<div class="col-md-12">
    <div class="SCHeader col-md-6">
       Credit Notes

    </div>
    <div class="col-md-6">
        <div class="" id="btnPatchCreditNotesSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "CreditNotes", data);
            }
        </div>
    </div>
</div>

<div id="exTab3" class="container SCtabContainer">
    <ul class="nav nav-pills">
        <li class="active">
            <a id="CreditNotesTab" onclick="List()" href="#CreditNotesList" data-toggle="tab"> <span class="fa fa-list">&nbsp;&nbsp;</span>Credit Notes List</a>
        </li> 
        <li >
            <a id="AddTab" onclick="Add(1)" href="#CreditNotesEntry" data-toggle="tab" style="width:235px"><span class="fa fa-file-o">&nbsp;&nbsp;</span>Credit Notes Entry</a>
        </li>
            

    </ul>
    <div class="tab-content clearfix">
        <div class="tab-pane fade" id="CreditNotesEntry">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                @using (Ajax.BeginForm("InsertUpdateCreditNotes", "CreditNotes", new AjaxOptions { HttpMethod = "POST", OnSuccess = "CreditNotesSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "formIns_Up" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inputForm col-md-12">
                            &nbsp;
                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.CreditNoteNo, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.CreditNoteNo, new { htmlAttributes = new { @class = "form-control BlockEnter" } })
                                        @Html.ValidationMessageFor(model => model.CreditNoteNo, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label " })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "Date" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                   </div>
                                     <div class="col-md-5">
                                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control BlockEnter", onkeypress = "return isNumber(event)", style = "text-align:right" } })
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                <div class="col-md-1 mandatory"></div>
                                </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control BlockEnter", rows = 4 } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>


                          
                            </div>
                        <div class="col-md-6 mastersep">
                            <div class="col-md-12">
                                <div class="masterinfo">
                                    <br />
                                    <br />

                                    <div class="masterinfoImg">
                                         
                                        <img src="~/Content/images/purse-with-bills.png" />
                                    </div>
                                    <br />
                                    <div class="masterinfoHead">
                                        Credit Note
                                    </div>
                                    <br />
                                    <div class="masterinfoDet">
                                        Credit Note is document sent by a IFB  , stating that a certain amount has been credited to the SC .
                                        A credit note is issued in various situations like againt a defective retuen or against a sales return or  to correct a mistake, 
                                        such as when (1) an invoice amount is overstated, 
                                        (2) correct discount rate is not applied, (3) goods damage within guaranty period, or 
                                        (4) they do not meet the SC specifications and are returned.

                                       
                                    </div>
                                </div>
                            </div>


                        </div>

                        <div class="col-md-6">
                       

                            <div class="form-group" hidden="hidden">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnInsertUpdateCreditNotes" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ID", @Value = Guid.Empty })
                    @Html.HiddenFor(model => model.HiddenCreditNoteNo, htmlAttributes: new { @class = "control-label col-lg-2", id = "HiddenCreditNoteNo", @Value = string.Empty })
                }
            </div>
    <div>
        </div>
        </div>
        <div class="tab-pane fade in active " id="CreditNotesList">
            <div class="col-md-12">&nbsp;</div>
          
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-1">


                            @Html.CheckBoxFor(model => model.showAllYN, new { @class = "css-checkbox", @id = "showAllYNCheckbox", @onclick = "showAllYNCheckedOrNot(this)" })
                            @Html.ValidationMessageFor(model => model.showAllYN, "", new { @class = "text-danger" })




                        </div>
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.showAllYN, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4" style="margin-left: -155px;">
                
                        <div class="form-group">
                            <!----------------6-------------------->

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.fromDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.fromDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "fromDate", @Value = ViewBag.fromDate } })
                                @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                <div class="col-md-4" style="margin-left: -130px;" >

                    <div class="form-group">
                        <!----------------6-------------------->

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.toDate, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.toDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "toDate", @Value = ViewBag.toDate } })
                            @Html.ValidationMessageFor(model => model.toDate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <table id="tblCreditNotesList" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                    <thead>
                        <tr class="text-center">
                            <th style="display:none;">ID</th>
                            <th>Credit Note No.</th>
                            <th>Date</th>
                            <th>Amount (₹)</th>
                            <th>Description</th>
                            <th>...</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div id="CreditNotesDelete" hidden="hidden">
            @using (Ajax.BeginForm("DeleteCreditNote", "CreditNotes", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "deleteId" })
                    <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
                </div>
            }
        </div>

        </div>
    </div>

    <div class="preloader" id="prelaoder">
        <img src="~/Content/images/loading.gif" class="preloaderImg" />
    </div>

    @section Scripts {
       @Scripts.RenderFormat(SiteKeys.ScriptVersion,"~/bundles/datatable")
       @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
       @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/bootstrapdatepicker")
       @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/CreditNotes")
    }


